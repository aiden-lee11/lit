# Compiler and flags
CXX := g++
CXXFLAGS := -Wall -Wextra -std=c++20 -MMD -MP

# Directories
SRC_DIR := src
BUILD_DIR := build
BIN := lit

# Sources, objects, and dependencies
SRCS := $(wildcard $(SRC_DIR)/*.cpp)
OBJS := $(SRCS:$(SRC_DIR)/%.cpp=$(BUILD_DIR)/%.o)
DEPS := $(OBJS:.o=.d)

# Default target
all: $(BIN)

# Link objects into final binary
$(BIN): $(OBJS)
	$(CXX) $(CXXFLAGS) -o $@ $^ -lz

# Compile source files into object files
$(BUILD_DIR)/%.o: $(SRC_DIR)/%.cpp | $(BUILD_DIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Ensure build directory exists
$(BUILD_DIR):
	mkdir -p $(BUILD_DIR)

# Clean up
clean:
	rm -rf $(BUILD_DIR) $(BIN)

# Run the program (example usage: make run ARGS="init")
run: $(BIN)
	./$(BIN) $(ARGS)

# Include dependency files (auto-generated by -MMD)
-include $(DEPS)

.PHONY: all clean run
